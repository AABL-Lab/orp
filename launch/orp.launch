<!--
Copyright (c) 2015, Adam Allevato
Copyright (c) 2017, The University of Texas at Austin
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice,
   this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its
   contributors may be used to endorse or promote products derived from
   this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<launch>
  <!-- ARGUMENTS TO ALLOW RUN FROM ANYWHERE -->
  <arg name="home_dir"         default="$(find orp)" />
  <arg name="list"             default="cfg/test_1.list" />

  <arg name="openni"           default="false"/>
  <arg name="openni2"          default="false"/>
  <arg name="realsense"        default="false"/>

  <arg name="autostart"        default="true"/>
  <arg name="sim"              default="false"/>
  <arg name="rviz"             default="false"/>
  <arg name="rviz_file"        default="$(arg home_dir)/cfg/recognition.rviz" />

  <arg name="fourdof"          default="false"/>
  <arg name="fourdof_folder"   default="data/fourdof" />
  <arg name="sixdof"           default="false"/>
  <arg name="sixdof_folder"    default="data/sixdof" />
  <arg name="cph"              default="false"/>
  <arg name="cph_folder"       default="data/cph" />

  <arg name="throttle_nodelet" default="100" />

  <!-- USE THIS FOR GDB -->

  <!--      launch-prefix="xterm -e gdb &#45;&#45;args"      -->

  <!-- DATA -->
  <include if="$(arg openni)" file="$(find openni_launch)/launch/openni.launch"> </include>
  <include if="$(arg openni2)" file="$(find openni2_launch)/launch/openni2.launch">
    <arg name="rgb_camera_info_url" value="file://$(find orp)/camera_calib/rgb_PS1080_PrimeSense.yaml" />
    <arg name="depth_camera_info_url" value="file://$(find orp)/camera_calib/depth_PS1080_PrimeSense.yaml" />
  </include>
  <include if="$(arg realsense)" file="$(find realsense_camera)/launch/realsense_rviz.launch"> </include>
  <remap if="$(arg sim)" from="/camera/depth_registered/points" to="/cloud_pcd" />

  <node name="throttle_nodelet" pkg="orp" type="throttle_nodelet.sh" args="$(arg throttle_nodelet)"/>

  <!-- CLASSIFICATION -->
  <node
    name    = "segmentation"
    pkg     = "orp"
    type    = "segmentation"
    args    = ""

    respawn = "true"
    output  = "screen"
  >
    <param name="clippingFrame" value="world"/>
  </node>

  <node
    if      = "$(arg cph)"
    name    = "cph_classifier"
    pkg     = "orp"
    type    = "cph_classifier"
    args    = "$(arg home_dir)/$(arg cph_folder) $(arg home_dir)/$(arg list) $(arg autostart)"

    respawn = "true"
    output  = "screen"
  />

  <node
    if      = "$(arg sixdof)"
    name    = "sixdof_classifier"
    pkg     = "orp"
    type    = "sixdof_classifier"
    args    = "$(arg home_dir)/$(arg sixdof_folder) $(arg home_dir)/$(arg list) $(arg autostart)"

    respawn = "true"
    output  = "screen"
  />

  <node
    if      = "$(arg fourdof)"
    name    = "fourdof_classifier"
    pkg     = "orp"
    type    = "cvfh_classifier"
    args    = "$(arg home_dir)/$(arg fourdof_folder) $(arg home_dir)/$(arg list) $(arg autostart)"

    respawn = "true"
    output  = "screen"
  />

  <!-- CONDUCTOR     -->

  <node
    name    = "recognizer"
    pkg     = "orp"
    type    = "recognizer"
    output  = "screen"
    respawn = "true"
  >
    <param name="recognitionFrame" value="world"/>
    <param name="autostart" type="bool" value="$(arg autostart)"/>
  </node>

  <!-- VISUALIZATION AND CONFIGURATION -->
  <node
    if      = "$(arg autostart)"
    name    = "rqt_reconfigure"
    pkg     = "rqt_reconfigure"
    type    = "rqt_reconfigure"
    args    = ""

    respawn = "false"
  />

  <node
    if      = "$(arg rviz)"
    name    = "rviz"
    pkg     = "rviz"
    type    = "rviz"
    args    = "-d $(arg rviz_file) -s $(arg home_dir)/rviz/splash.png"

    respawn = "false"
    output  = "screen"
  />

  <rosparam command="load" file="$(arg home_dir)/cfg/default.yaml" />

  <node
    name    = "dynparam"
    pkg     = "dynamic_reconfigure"
    type    = "dynparam"
    args    = "set camera/driver depth_registration true"

    respawn = "false"
  />
</launch>
