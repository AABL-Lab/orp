<launch>
  <!-- ARGUMENTS TO ALLOW RUN FROM ANYWHERE -->
  <arg name="home_dir"        default="$(find orp)" />
  <arg name="sixdof_folder"   default="$(find orp)/data/sixdof" />
  <arg name="fourdof_folder"  default="$(find orp)/data/fourdof" />
  <arg name="list"            default="$(arg home_dir)/cfg/test_all.list" />
  <arg name="openni"          default="false"/>
  <arg name="openni2"         default="true"/>
  <arg name="realsense"       default="false"/>
  <arg name="recognitionview" default="false"/>
  <arg name="sim"             default="false"/>

  <arg name="fourdof"         default="false"/>
  <arg name="sixdof"          default="true"/>

  <rosparam command="load" file="$(arg home_dir)/cfg/sia5_demo.yaml" />
  <rosparam command="load" file="$(arg home_dir)/cfg/shelves_absolute.yaml" />

  <!-- DATA -->
  <include if="$(arg openni)" file="$(find openni_launch)/launch/openni.launch"> </include>
  <include if="$(arg openni2)" file="$(find openni2_launch)/launch/openni2.launch">  </include>
  <include if="$(arg realsense)" file="$(find realsense_camera)/launch/realsense_camera.launch"> </include>
  <remap if="$(arg sim)" from="/camera/depth_registered/points" to="/cloud_pcd" />
  <remap from="/camera/depth_registered/points" to="/camera/depth/points" />

  <node pkg = "amazon_challenge" type="load_item_params.py" name="$(anon orp_load_item_params)" args="$(find amazon_challenge)/scripts/APC.sqlite" output="screen" respawn="false" />

  <!-- CLASSIFICATION -->

  <node
    if      = "$(arg sim)"
    name    = "dummy_frame_broadcaster"  
    pkg     = "orp"
    type    = "dummy_frame_broadcaster"
    args    = "base_link camera_link 0 0 0 0 0 0"

    respawn = "true"
    output  = "screen"
  />

  <node
    name    = "segmentation"  
    pkg     = "orp"
    type    = "segmentation"
    args    = ""

    respawn = "true"
    output  = "screen"
  />

  <node
    if      = "$(arg sixdof)"
    name    = "sixdof_classifier"
    pkg     = "orp"
    type    = "sixdof_classifier"
    args    = "$(arg sixdof_folder) $(arg list)"

    respawn = "true"
    output  = "screen"
  />

  <node
    if      = "$(arg fourdof)"
    name    = "fourdof_classifier"
    pkg     = "orp"
    type    = "cvfh_classifier"
    args    = "$(arg fourdof_folder) $(arg list)"

    respawn = "true"
    output  = "screen"
  />

  <!-- CONDUCTOR -->
  <node
    name    = "shelf_manager"
    pkg     = "orp"
    type    = "shelf_manager"

    respawn = "true"
    output  = "screen"
  />

  <node
    name    = "recognizer"
    pkg     = "orp"
    type    = "recognizer"
    args    = "$(arg list)"

    respawn = "true"
    output  = "screen"
  />

  <!-- VISUALIZATION AND CONFIGURATION -->
  <node
    name    = "rqt_reconfigure"
    pkg     = "rqt_reconfigure"
    type    = "rqt_reconfigure"
    args    = ""

    respawn = "false"
    output  = "screen"
  />

  <node
    if      = "$(arg recognitionview)"
    name    = "rviz"
    pkg     = "rviz"
    type    = "rviz"
    args    = "-s $(arg home_dir)/rviz/splash.png"

    respawn = "false"
    output  = "screen"
  />

</launch>
