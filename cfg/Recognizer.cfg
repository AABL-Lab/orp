#!/usr/bin/env python
PACKAGE = "orp"
from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()

#gen.add(name, type, 0, description, default, min, max
# EXAMPLE
#gen.add("variable",                  int_t,    0, "Edge detection threshold", 50,1,100)

##############################################################################

gen.add("stale_time",                   double_t,    0, "Number of seconds that an object will persist in the world model after being updated", 1,0,100)
gen.add("colocation_dist",              double_t,    0, "Objects closer together than this (or moving less than this distance in a given update step) will be considered to be the same object", 0.05,0,0.2)
gen.add("refresh_interval",   					double_t, 0, "Recognition interval in seconds", 0.1,0.001,5)

gen.add("show_unknown_labels", 					bool_t,   0, "UNUSED Show labels for point clouds that can't be recognized",  True)
gen.add("show_recognition_probability", bool_t,   0, "UNUSED Show the (decimal) probability of the result on the markers",  False)
gen.add("show_position", 								bool_t,   0, "UNUSED Show the X,Y,Z position on the markers", False)
gen.add("show_pose", 										bool_t,   0, "UNUSED Show the pose (rotation about Y-axis) on the markers",  False)
gen.add("show_pose_std_dev",						bool_t,   0, "UNUSED Show the pose standard deviation on the markers",  False)

gen.add("debug_print",						bool_t,   0, "Output debug information about detected objects",  False)

##############################################################################
exit(gen.generate(PACKAGE, "orp", "Recognizer"))
