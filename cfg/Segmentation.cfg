#!/usr/bin/env python
PACKAGE = "orp"
from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()

##############################################################################

#       name             type      1  description                        default min  max
# SPATIAL BOUNDS
gen.add("spatial_min_x", double_t, 0, "Left edge of bounding box",       -5,  -5,  5   )
gen.add("spatial_max_x", double_t, 0, "Right edge of bounding box",      5,    -5,  5   )
gen.add("spatial_min_y", double_t, 0, "Top face of bounding box",        -0.4,   -5,  5   )
gen.add("spatial_max_y", double_t, 0, "Bottom face of bounding box",     0.4,    -5,  5   )
gen.add("spatial_min_z", double_t, 0, "Front face of bounding box",      -10,      -10,   10  )
gen.add("spatial_max_z", double_t, 0, "Back face of bounding box",       10,    -10,   10  )

gen.add("max_clusters", int_t, 0, "Maximum clusters to publish",       10,    0,   100  )

# SEGMENTATION
gen.add("max_plane_segmentation_iterations",     int_t,    0, "", 50, 1, 1000)
gen.add("segmentation_distance_threshold",       double_t, 0, "", 0.01, 0.0001, 0.5)
gen.add("percentage_to_analyze",                 double_t, 0, "", 0.2, 0, 1.0)

# FILTERING
gen.add("voxel_leaf_size",                       double_t, 0, "", 0.005, 0.0001, 0.05)

# CLUSTERING
gen.add("cluster_tolerance",                     double_t, 0, "distance between points in a cluster", 0.03, 0, 0.1)
gen.add("min_cluster_size",                      int_t,    0, "min number of points in cluster", 300, 0, 5000)
gen.add("max_cluster_size",                      int_t,    0, "max number of points in cluster", 2000, 0, 100000)

##############################################################################

exit(gen.generate(PACKAGE, "orp", "Segmentation"))
